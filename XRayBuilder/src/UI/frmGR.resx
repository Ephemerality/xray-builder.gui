<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbCover.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAABaCAIAAABrM6JiAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAAIzSURBVHhe7dRfKwRRGMdxrw/vQyxSXLig8A6wkeJiV5F4
        Ga5IUf4n1o0b4ta/Gj9zHtPTmZmzZ3aPZw89v75pd/ZkP02725f8wSlaaoqW2n9BN0b6o4pYbMXoZH89
        khQtlaKlUnSXHW4nT3fJ5/t3T63kaNc+8FM0aIg/XunNzPAUF61jadGgcY/ze7y1j6VFg8ZHIj9ctI6l
        RY5+s4+lRYPGNy+/2D8e+K3IfxEPIv8iIvxW4Naanzw8KBGjmNDeKTrtZW/heWfOuhi2wGiIW8tD6Ffd
        IdGZ2N99sjZ1VJ+wLrYtGNoSm9zu841p/FtU1R0GXSg2lbmvGzON2oBBV3UHQDvEprz7pjnbrBE3y9+N
        w8Riq4BuKzZxd2trvsnuMc/TjZPEYvNFe4pNxn2/vVAmNvm4cYxYbF7oSmLTQ3N6c3Qw85V1vDppvZcV
        zhCLrT26A7HpdHE4wzly328cIBZbG3THYtPZ4kiGc+Rw41VisbnQXYpNZ0tdufESsdhK0UHEpm7cuE4s
        tmJ0QLGpYzcuEoutGG29ZZAulmsZzpHlxhViscmh0UV9NMM54m48JRabKBpVdeMxsdik0aiSGw+IxdYD
        NLr0duMvsdh6g0aebkQstp6h0WV9jOPKIhZbL9HoamWc+wojFlsxOqqIxVaAjn+KlpqipaZoqSlaaoqW
        mqKlpmipKVpqipaaoqWmaKkpWmqKlpqipaZoqSlaaoqWmqKlpmipKVpqipbaH0QnyRdsbxHYMXA4CwAA
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMKQXi7WnHB22aB1jtmgdY7WnHB2wpBeLgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAzo1nL92jdq/ssob58LeL//C3i//wt4v/8LeL/+uzhvrco3avzYtpLgAA
        AAAAAAAAAAAAAAAAAAAAAAAA0ZhqTeaugeTwt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL/+as
        guTTlmlLAAAAAAAAAAAAAAAAz49lMOitguTwt4v/8LeL//C3i//wt4v/9Mqp//TJqf/wt4v/8LeL//C3
        i//wt4v/5qyC5M6NZy8AAAAAAAAAANyid7Dwt4v/8LeL//C3i//wt4v/8LeL//TKqf/0yqn/8LeL//C3
        i//wt4v/8LeL//C3i//coXWuAAAAAMWKYDDss4b68LeL//C3i//wt4v/8LeL//C3i//xvZT/8b2U//C3
        i//wt4v/8LeL//C3i//wt4v/67OG+sKQXi7WnG938LeL//C3i//wt4v/8LeL//C3i//wt4v/9tK3//fX
        v//wt4v/8LeL//C3i//wt4v/8LeL//C3i//Wm2912qF1kPC3i//wt4v/8LeL//C3i//wt4v/8LeL//LA
        mv/88Of/8buR//C3i//wt4v/8LeL//C3i//wt4v/2aB1jtyhdZDwt4v/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/9c6x//ro2//wt4v/8LeL//C3i//wt4v/8LeL/9qhdZDXm2948LeL//C3i//wt4v/8LeL//LD
        nv/32sP/8LeL//C3i//76tz/8sCZ//C3i//wt4v/8LeL//C3i//WnHB2x4phMuyzhvrwt4v/8LeL//C3
        i//xvpb/++zh//C3i//wt4v/++3i//G+lv/wt4v/8LeL//C3i//ssob5w41cLwAAAADdo3Wy8LeL//C3
        i//wt4v/8LeL//jdyP/77OH/++zh//jcx//wt4v/8LeL//C3i//wt4v/3aN2rwAAAAAAAAAA0JJoMeit
        guXwt4v/8LeL//C3i//wt4v/8r6X//K+l//wt4v/8LeL//C3i//wt4v/5q6B5M+PZTAAAAAAAAAAAAAA
        AADOlmlO6K2C5fC3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/5q6B5NGYak0AAAAAAAAAAAAA
        AAAAAAAAAAAAANCSaDHco3ix7LOG+vC3i//wt4v/8LeL//C3i//ss4b63KJ3sM+PZTAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMeKYTLXm2942qB0j9mgdY7Xm294xYpgMAAAAAAAAAAAAAAAAAAA
        AAAAAAAA+B8AAOAHAADAAwAAgAEAAIABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAQAAgAEAAMAD
        AADgBwAA+B8AAA==
</value>
  </data>
</root>