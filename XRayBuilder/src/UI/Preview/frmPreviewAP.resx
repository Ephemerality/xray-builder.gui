<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbAuthorImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAN+/gAjpx6GI79Cquu7Rqrbmw56M2bOMFAAAAAAAAAAA1aqAEuXE
        n4ruz6q179KpuuvMpYvYsZ0NAAAAAAAAAADpyqas/+i////owP//6MD//+jA/+3Op8cAAAAAAAAAAO3P
        qrr/6MD//+jA///owP//7Mz/68ulogAAAAAAAAAA8di45v/owP//6MD//+jA///owP/74rv/4rmYPsWS
        dSP76Mn6/+jA///owP//6MD//+nC//HUrNcAAAAAnsONTO/bvfr/68f//+jA///owP//6MD//OO7/8HB
        lYertol3++3S///pwv//6MD//+jA///owP/o1KzzncORUaHFk7Xe2LT/9+TJ//3qy//+6MT/+d+4/+HR
        qv+23K/9ttyv/ebVtP/55sv//unI//3mv//13LT/1NSu/6HIk7mXxYsWkbaBpKG8jO+8vJChxL2UlrC7
        iniTuoVck7qFXJO6hVyTuoVcsLuKeMC6kJG5uYuYoLuM7ZC2gKqbuYMhAAAAAAAAAACNsX+PjrOCqwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlLeGoouwfJgAAAAAAAAAAAAAAAAAAAAAgICAAo60
        gbCJq3lhh6x1kAAAAAAAAAAAAAAAAAAAAACIrXeJjLB8VIyyfrKAgEAEAAAAAAAAAAAAAAAAAAAAAAAA
        AACJnWINia13uo2xfXIAAAAAAAAAAAAAAAAAAAAAjrF8dYisdbuAnGMSAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAP//AAD//wAA//8AAIGBAACBgQAAgAEAAAAAAAAAAAAAAAAAAM/zAADDwwAA48cAAP//
        AAD//wAA//8AAA==
</value>
  </data>
</root>